{"version":3,"file":"static/js/236.d33910e7.chunk.js","mappings":"+SAEaA,EAAOC,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAElBC,EAAYH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yQAYtBG,EAAeL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iCAIzBK,EAAQP,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qFAMjBO,EAAQT,EAAAA,EAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gT,oICfpBS,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,MAACX,EAAAA,GAAS,CAAAY,SAAA,EACRC,EAAAA,EAAAA,KAACT,EAAAA,GAAK,CAAAQ,SAAC,cACPD,EAAAA,EAAAA,MAACf,EAAAA,GAAI,CAACkB,SAhBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfT,GACEU,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACP,EAKiCb,SAAA,EAC3BC,EAAAA,EAAAA,KAACX,EAAAA,GAAY,CAAAU,UACXC,EAAAA,EAAAA,KAACP,EAAAA,GAAK,CACJoB,KAAK,OACLN,KAAK,OACLO,YAAY,kBACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZjB,EAAAA,EAAAA,KAACX,EAAAA,GAAY,CAAAU,UACXC,EAAAA,EAAAA,KAACP,EAAAA,GAAK,CACJoB,KAAK,QACLN,KAAK,QACLO,YAAY,2BACZC,QAAQ,oDACRC,MAAM,qCACNC,UAAQ,OAGZjB,EAAAA,EAAAA,KAACX,EAAAA,GAAY,CAAAU,UACXC,EAAAA,EAAAA,KAACP,EAAAA,GAAK,CACJoB,KAAK,WACLN,KAAK,WACLO,YAAY,sBACZC,QAAQ,6CACRC,MAAM,sGACNC,UAAQ,OAGZnB,EAAAA,EAAAA,MAAA,UAAQoB,MAAM,WAAUnB,SAAA,CAAC,YAE7BC,EAAAA,EAAAA,KAAA,QAAMkB,MAAM,kBAAiBnB,UAC3BD,EAAAA,EAAAA,MAAA,QAAMoB,MAAM,kBAAiBnB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,QAAMkB,MAAM,oBACZlB,EAAAA,EAAAA,KAAA,QAAMkB,MAAM,oBACZlB,EAAAA,EAAAA,KAAA,QAAMkB,MAAM,oBACZlB,EAAAA,EAAAA,KAAA,QAAMkB,MAAM,4BAIlBlB,EAAAA,EAAAA,KAAA,UACFA,EAAAA,EAAAA,KAAA,OAAKmB,MAAM,6BAA6BC,QAAQ,MAAKrB,UACnDC,EAAAA,EAAAA,KAAA,QAAAD,UACED,EAAAA,EAAAA,MAAA,UAAQuB,GAAG,MAAKtB,SAAA,EACdC,EAAAA,EAAAA,KAAA,kBAAgBsB,GAAG,gBAAgBC,OAAO,OAAOC,aAAa,QAC9DxB,EAAAA,EAAAA,KAAA,iBAAesB,GAAG,OAAOG,KAAK,SAASC,OAAO,4CAA4CH,OAAO,SACjGvB,EAAAA,EAAAA,KAAA,WAAS2B,IAAI,MAAML,GAAG,gBAAgBC,OAAO,oBAOnD,EClFe,SAASK,IACtB,OACE9B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAA9B,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACL,EAAY,MAGnB,C","sources":["components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 400px;\n  padding: 40px;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.5);\n  box-sizing: border-box;\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n`;\nexport const ContainerBox = styled.div`\n  position: relative;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 30px;\n  padding: 0;\n  color: #fff;\n  text-align: center;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 16px;\n  color: #fff;\n  margin-bottom: 30px;\n  border: none;\n  border-bottom: 1px solid #fff;\n  outline: none;\n  background: transparent;\n  :focus,\n  :valid {\n    top: -20px;\n    left: 0;\n    color: #f4ec03;\n    font-size: 16px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operation';\nimport {\n  Container,\n  ContainerBox,\n  Form,\n  Input,\n  Title\n} from '../LoginForm/LoginForm.styled';\nimport '../LoginForm/BlobButton.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <Title>Register</Title>\n      <Form onSubmit={handleSubmit}>\n        <ContainerBox>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your nane\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </ContainerBox>\n        <ContainerBox>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n            title=\"Please enter a valid email address\"\n            required\n          />\n        </ContainerBox>\n        <ContainerBox>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n            title=\"The password must contain only Latin letters (both upper and lower case), numbers and other symbols\"\n            required\n          />\n        </ContainerBox>\n        <button class=\"blob-btn\">\n    Register\n    <span class=\"blob-btn__inner\">\n      <span class=\"blob-btn__blobs\">\n        <span class=\"blob-btn__blob\"></span>\n        <span class=\"blob-btn__blob\"></span>\n        <span class=\"blob-btn__blob\"></span>\n        <span class=\"blob-btn__blob\"></span>\n      </span>\n    </span>\n  </button>\n  <br/>\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n  <defs>\n    <filter id=\"goo\">\n      <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\"></feGaussianBlur>\n      <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 21 -7\" result=\"goo\"></feColorMatrix>\n      <feBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\"></feBlend>\n    </filter>\n  </defs>\n</svg>\n      </Form>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","ContainerBox","_templateObject3","Title","_templateObject4","Input","_templateObject5","RegisterForm","dispatch","useDispatch","_jsxs","children","_jsx","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","type","placeholder","pattern","title","required","class","xmlns","version","id","in","result","stdDeviation","mode","values","in2","Register","Helmet"],"sourceRoot":""}